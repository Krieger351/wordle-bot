/* eslint sort-keys: "error" */
module.exports = {
  env: {
    node: true,
  },
  extends: [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:typescript-sort-keys/recommended",
    "plugin:eslint-comments/recommended",
    "plugin:sonarjs/recommended",
    "plugin:unicorn/recommended",
    "plugin:custom-elements/recommended",
  ],
  parser: "@typescript-eslint/parser",
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
    project: "./tsconfig.json",
  },
  plugins: [
    "@typescript-eslint",
    "github",
    "sonarjs",
    "unicorn",
    "no-explicit-type-exports",
  ],
  root: true,
  rules: {
    "@typescript-eslint/consistent-indexed-object-style": ["error", "record"],
    "@typescript-eslint/consistent-type-exports": "error",
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/explicit-module-boundary-types": "error",
    "@typescript-eslint/no-unused-vars": ["error", { argsIgnorePattern: "^_" }],
    "@typescript-eslint/no-use-before-define": [
      "error",
      {
        classes: true,
        enums: true,
        functions: true,
        ignoreTypeReferences: false,
        typedefs: true,
        variables: true,
      },
    ],
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "arrow-body-style": ["error", "as-needed"],
    eqeqeq: "error",
    "github/array-foreach": "error",
    "github/async-currenttarget": "error",
    "github/async-preventdefault": "error",
    "github/get-attribute": "error",
    "github/no-blur": "error",
    "github/no-dataset": "error",
    "github/no-useless-passive": "error",
    "github/prefer-observers": "error",
    "github/require-passive-events": "error",
    "import/newline-after-import": "error",
    "import/no-duplicates": "error",
    "import/no-extraneous-dependencies": "error",
    "import/no-named-as-default": "error",
    "import/no-named-as-default-member": "error",
    "import/order": [
      "error",
      {
        alphabetize: {
          caseInsensitive: false,
          order: "asc",
        },
        groups: [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index",
          "object",
          "type",
        ],
        "newlines-between": "never",
      },
    ],
    "no-explicit-type-exports/no-explicit-type-exports": "error",
    "no-param-reassign": "error",
    "no-useless-rename": "error",
    "no-useless-return": "error",
    "no-var": "error",
    "prefer-arrow-callback": "error",
    "prefer-const": "error",
    "prefer-destructuring": "error",
    "prefer-rest-params": "error",
    "prefer-template": "error",
    quotes: [
      "error",
      "double",
      { allowTemplateLiterals: false, avoidEscape: true },
    ],
    "require-await": "error",
    "sonarjs/elseif-without-else": "error",
    "unicorn/import-index": "error",
    "unicorn/no-keyword-prefix": [
      "error",
      { disallowedPrefixes: ["new", "for"] },
    ],
    "unicorn/no-unsafe-regex": "error",
    "unicorn/no-unused-properties": "error",
    "unicorn/prefer-dom-node-dataset": "off",
    "unicorn/prefer-module": "off",
    "unicorn/prefer-object-has-own": "error",
    "unicorn/prefer-string-replace-all": "error",
    "unicorn/require-post-message-target-origin": "error",
    "unicorn/string-content": "error",
    "unicorn/template-indent": "error",
  },
  settings: {
    "import/resolver": {
      typescript: {
        alwaysTryTypes: true,
        project: "tsconfig.json",
      },
    },
  },
};
